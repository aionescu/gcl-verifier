min (a :[Int] , x : Ref , u : Ref) -> m : Ref {
    assume #a >0 && #a == 10 && !( x == null ) && ( forall i . 0 <= i && i <  #a => a[i] > 0) ;
    let k: Int {
        k = 0 ;
        while k < #a {
            u = new (a[k]) ;
            if k == 0 {
                m = u;
            };
            if u . val < m . val {
                m = u;
            } else {
                u.val = u.val + 1;
            };
            if !( m == null ) {
                x.val = m.val + 1;
            }
            k = k + 1;
        }
    };
    assert ( forall i . 0 <= i && i < #a => m.val <= a [ i ]);
}